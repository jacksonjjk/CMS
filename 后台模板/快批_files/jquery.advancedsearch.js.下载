/*!
 * DengYongQing Circle Loader v0.2 (2015-11-03)
 * jQuery plugin
 * Copyright (c) 2015 KP deng<490844594@qq.com>
 * Dual licensed under the MIT and GPL licenses.
 */
(function($, window) {
    // 公共变量和方法
    var extendedOptions = {
        toJSONString: function(data) {
            return JSON.stringify(data);
        }
    }
    // 插件定义
    $.fn.AdSearch = function(opt) {
        // 默认参数，可被重写
        var defaults = {
            //请求地址
            url: "",
            Isadearch: false,

        };
        // 插件配置
        this.options = $.extend(defaults, opt, extendedOptions);
        var _oSelf = this;
        var $this = $(this);
        // 内部使用参数
        var _oEventAlias = {
            datascreening: "",
        };
        //初始化变量
        var _$datascreening = $(".datascreening");
        var _$tableGrid = $this.find("thead");
        var _$bootstrapTable = $this.find("thead tr").eq(0).find("th"); //表头字段
        
        // 创建高级筛选
        var _creatSearchInput = function() {
            $(".datascreening").remove();
            var $content = new Array([""]);
            if (_oSelf.options.Isadearch) {
                $content.push('<tr style="border: 1px solid #999;background=#fff;" class="datascreening ">');
                _$RollbackData.each(function() {
                    var width = $(this).css("width");
                    var filed = $(this).attr("id");
                    $content.push('<th><input type="text" value="' + $(this).val() + '" style="width: ' + width + '" id=' + filed + '></th>');
                });
            } else {
                $content.push('<tr style="border: 1px solid #999;background=#fff;display:none" class="datascreening ">');
                _$bootstrapTable.each(function() {
                    var width = $(this).css("width");
                    var filed = $(this).attr("data-field");
                    $content.push('<th><input type="text" value="" style="width: ' + width + '" id=' + filed + '></th>');
                });
            }
            $content.push('</tr>');
            _$tableGrid.append($content.join(''));
            _oEventAlias.datascreening = $(".datascreening");
        };
        
        // 绑定筛选输入框 keyup 事件
        var _onKeyUpEvent = function() {
            var _$tableGridInput = _oEventAlias.datascreening.find("input");
            _$tableGridInput.unbind("keyup");
            _$tableGridInput.bind("keyup", function(e) {
            	e = (e) ? e: window.event
                var keycode = e.keyCode
                if (keycode == 13) {
                    _oSelf.options.Isadearch = true;
                    //showProcessModal("正在查询...");
                    $this.bootstrapTable("refresh", {
                        url: _oSelf.options.url
                    });
                }
            });
        }
        
        // 初始化函数
        var _init = function() {
            _creatSearchInput();
            _onKeyUpEvent();
        }

        // 显示筛选
        this.show = function(_this) {
            _oEventAlias.datascreening.show();
            $(_this).html('<i class="fa fa-filter"></i>&nbsp;关闭筛选');
        };
        
        // 隐藏筛选
        this.hide = function(_this) {
            if (_oSelf.options.Isadearch) {
                location.reload();
            }
            _oEventAlias.datascreening.hide();
            $(_this).html('<i class="fa fa-filter"></i>&nbsp;开启筛选')
        };
        
        //
        this.clean = function(param) {
            var $datascreening = $(".datascreening");
            if ($datascreening.length > 1) {
                $datascreening.eq(param).remove();
            }
        };
        
        // 获取筛选数据
        this.getData = function() {
            var $TableGridInput = $(".datascreening").find("input");
            _$RollbackData = $TableGridInput;
            var advancedSearchText = [];
            $TableGridInput.each(function() {
                if ($(this).val() != "") {
                    var data = {
                    	"filter": $(this).attr("id"),
                    	"value": $(this).val()
                    };
                    advancedSearchText.push(data);
                }
            });
            return extendedOptions.toJSONString(advancedSearchText);
        };
        
        this.getIsAdSearch = function() {
            return _oSelf.options.Isadearch;
        };
        
        this.setIsAdSearch = function(isAdSearch) {
        	_oSelf.options.Isadearch = isAdSearch;
        }
        
        // 启动插件
        _init();

        // 链式调用
        return this;
    }
})(jQuery, window);